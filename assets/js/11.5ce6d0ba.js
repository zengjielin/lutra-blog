(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{417:function(s,n,a){"use strict";a.r(n);var e=a(2),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"在foreach中使用async-await不起作用解决方案"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#在foreach中使用async-await不起作用解决方案"}},[s._v("#")]),s._v(" 在forEach中使用async/await不起作用解决方案")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function test() {\n let arr = [1, 2, 3]\n arr.forEach(async item => {\n  const res = await fetch(item)\n  console.log(res)\n })\n console.log('end')\n}\n\nfunction fetch(x) {\n return new Promise((resolve, reject) => {\n     resolve(x)\n })\n}\n\ntest()\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("思考如上代码、我们预期结果是先输出1，2，3，然后因为等待异步结果最后输出end")]),s._v(" "),n("p",[s._v("但是实际上输出却是end先输出，才到1，2，3。")]),s._v(" "),n("p",[s._v("原因如下：")]),s._v(" "),n("p",[s._v("1、首先这是因为foreach是没有return返回值的（可以自己去跟下源码，"),n("code",[s._v("foreach")]),s._v("内部实现只是简单的回调）")]),s._v(" "),n("p",[s._v("2、而foreach里面的回调函数因为加了async的原因，所以默认会返回一个promise，但是因为foreach的实现并没有返回值，所以导致返回的这个promise对象没人去管了")]),s._v(" "),n("p",[s._v("首先为了保证end最后输出，我们肯定要先等待循环的返回结果因此改成如下代码")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("async function test() {\n let arr = [1, 2, 3]\n await arr.forEach(async item => {\n  const res = await fetch(item)\n  console.log(res)\n })\n console.log('end')\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("但是这样改之后依然行不通，原因是 "),n("code",[s._v("foreach")]),s._v("没有返回值，所以我们必须保证循环能够有返回值，所以要将foreach改成map")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("async function test() {\n let arr = [1, 2, 3]\n await arr.map(async item => {\n  const res = await fetch(item)\n  console.log(res)\n })\n console.log('end')\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("结果依然不行，然后我们会发现其实 "),n("code",[s._v("map")]),s._v("返回的并不是一个promise对象，而是一个包含promise对象的数组 "),n("code",[s._v("[promise, promise, promise]")]),s._v("，其中每个promise对象都是循环迭代产生的结果。而await是处理不了数组的，它只能处理promise对象。考虑到这一点我们基本上就差不多知道如何改正了、有两种方法。")]),s._v(" "),n("p",[s._v("第一是将循环改成常规的遍历方式")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("async function test() {\n let arr = [1, 2, 3]\n for(let i in arr){\n   const res = await fetch(arr[i])\n   console.log(res)          \n }\n console.log('end')\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("第二种就比较高端了，使用 "),n("code",[s._v("Promise.all()")]),s._v("，这是一个专门处理promise数组的方法，当async标记的箭头函数返回一个promise对象时，"),n("code",[s._v("map")]),s._v("方法得到的就是一个promise对象数组，然后我们将这个数组丢给 "),n("code",[s._v("Promise.all()")]),s._v("去依次执行，然后只需要使用 "),n("code",[s._v("await")]),s._v("去等待执行结果，就能保证后面的end在得到结果后才会被输出，得到最终输出结果1，2，3，end")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("async function test() {\n let arr = [1, 2, 3]\n await Promise.all(arr.map(async item => {\n  const res = await fetch(item)\n  console.log(res)\n }))\n console.log('end')\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);